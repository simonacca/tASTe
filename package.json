{
  "name": "taste",
  "private": true,
  "displayName": "tASTe",
  "description": "The AST Editor",
  "publisher": "simonacca",
  "repository": {
    "url": "https://github.com/simonacca/tASTe"
  },
  "version": "1.0.17",
  "engines": {
    "vscode": "^1.80.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "taste.ExpandSelection",
        "title": "Taste: Expand Selection"
      },
      {
        "command": "taste.ContractSelection",
        "title": "Taste: Contract Selection"
      },
      {
        "command": "taste.SelectTopLevel",
        "title": "Taste: Select Top Level"
      },
      {
        "command": "taste.GrowSelectionAtEnd",
        "title": "Taste: Grow Selection at End"
      },
      {
        "command": "taste.ShrinkSelectionAtEnd",
        "title": "Taste: Shrink Selection at End"
      },
      {
        "command": "taste.GrowSelectionAtStart",
        "title": "Taste: Grow Selection at Start"
      },
      {
        "command": "taste.ShrinkSelectionAtStart",
        "title": "Taste: Shrink Selection at Start"
      },
      {
        "command": "taste.SelectForward",
        "title": "Taste: Move selection forward (usually grows it, shrinks it if inverted)"
      },
      {
        "command": "taste.SelectBackward",
        "title": "Taste: Move selection backward (usually shrinks it, grows it if inverted)"
      },
      {
        "command": "taste.MoveCursorBackward",
        "title": "Taste: Move Cursor backward (experimental)"
      },
      {
        "command": "taste.MoveCursorForward",
        "title": "Taste: Move Cursor forward (experimental)"
      },
      {
        "command": "taste.Raise",
        "title": "Taste: Substitute Parent with Node. AKA: Raise"
      },
      {
        "command": "taste.SwapBackward",
        "title": "Taste: Swap Node with previous Node"
      },
      {
        "command": "taste.SwapForward",
        "title": "Taste: Swap Node with next Node"
      },
      {
        "command": "taste.BarfForward",
        "title": "Taste: Barf Forward.  Last element of the current sequence becomes the next sibling of the current sequence"
      },
      {
        "command": "taste.SlurpForward",
        "title": "Taste: Slurp Forward. Next sibling of the current sequence becomes last child of the current sequence"
      }
    ]
  },
  "scripts": {
    "build-parsers": "./build-parsers.sh",
    "build": "tsc -p ./",
    "build-watch": "tsc -p ./ -watch",
    "docker-build-img": "docker build --platform linux/amd64 --network=host -t simonacca/taste .",
    "clean": "rm -rf out",
    "lint": "npx prettier --check . && npx eslint src --ext ts && shellcheck build-parsers.sh",
    "format": "npx prettier --write .",
    "test": "npx jest",
    "test-watch": "npx jest --watch",
    "check": "npm run lint && npm run test",
    "package": "npx vsce package",
    "vscode:prepublish": "npm run check && npm run build",
    "publish": "npx vsce publish",
    "tag-n-push": "git tag v$(jq -r '.version' package.json) && git push --tags"
  },
  "devDependencies": {
    "@tree-sitter-grammars/tree-sitter-markdown": "github:tree-sitter-grammars/tree-sitter-markdown",
    "@tree-sitter-grammars/tree-sitter-xml": "github:tree-sitter-grammars/tree-sitter-xml",
    "@tree-sitter-grammars/tree-sitter-yaml": "github:tree-sitter-grammars/tree-sitter-yaml",
    "@types/jest": "^29.5.12",
    "@types/node": "18.x",
    "@types/vscode": "^1.80.0",
    "@typescript-eslint/eslint-plugin": "^7.4.0",
    "@typescript-eslint/parser": "^7.4.0",
    "@vscode/vsce": "^2.25.0",
    "eslint": "^8.57.0",
    "jest": "^29.7.0",
    "jest-mock-vscode": "^3.0.2",
    "prettier": "^3.2.5",
    "tree-sitter": "^0.21.1",
    "tree-sitter-bash": "^0.21.0",
    "tree-sitter-c": "^0.21.0",
    "tree-sitter-c-sharp": "^0.20.0",
    "tree-sitter-capnp": "^1.5.0",
    "tree-sitter-cli": "^0.22.5",
    "tree-sitter-clojure": "github:sogaiu/tree-sitter-clojure",
    "tree-sitter-commonlisp": "^0.3.3",
    "tree-sitter-cpp": "^0.22.0",
    "tree-sitter-css": "^0.20.0",
    "tree-sitter-csv": "github:tree-sitter-grammars/tree-sitter-csv",
    "tree-sitter-dart": "^1.0.0",
    "tree-sitter-dockerfile": "github:camdencheek/tree-sitter-dockerfile",
    "tree-sitter-dot": "^0.1.5",
    "tree-sitter-elixir": "^0.2.0",
    "tree-sitter-erlang": "github:WhatsApp/tree-sitter-erlang",
    "tree-sitter-fish": "github:ram02z/tree-sitter-fish",
    "tree-sitter-go": "^0.21.0",
    "tree-sitter-graphql": "github:bkegley/tree-sitter-graphql",
    "tree-sitter-hacklang": "github:slackhq/tree-sitter-hack",
    "tree-sitter-haskell": "^0.15.0",
    "tree-sitter-hcl": "github:tree-sitter-grammars/tree-sitter-hcl",
    "tree-sitter-html": "^0.20.2",
    "tree-sitter-java": "^0.21.0",
    "tree-sitter-javascript": "^0.20.4",
    "tree-sitter-json": "^0.21.0",
    "tree-sitter-julia": "^0.19.0",
    "tree-sitter-kotlin": "^0.3.5",
    "tree-sitter-lua": "^2.1.3",
    "tree-sitter-matlab": "github:mstanciu552/tree-sitter-matlab",
    "tree-sitter-nix": "^0.0.2",
    "tree-sitter-objc": "github:jiyee/tree-sitter-objc",
    "tree-sitter-php": "github:simonacca/tree-sitter-php",
    "tree-sitter-python": "^0.21.0",
    "tree-sitter-qmljs": "^0.1.2",
    "tree-sitter-r": "github:r-lib/tree-sitter-r",
    "tree-sitter-racket": "github:6cdh/tree-sitter-racket",
    "tree-sitter-ruby": "^0.20.1",
    "tree-sitter-rust": "^0.21.0",
    "tree-sitter-scala": "^0.19.0",
    "tree-sitter-scheme": "github:6cdh/tree-sitter-scheme",
    "tree-sitter-scss": "^1.0.0",
    "tree-sitter-sql": "^0.1.0",
    "tree-sitter-swift": "^0.4.3",
    "tree-sitter-toml": "^0.5.1",
    "tree-sitter-typescript": "^0.20.5",
    "tree-sitter-zig": "github:maxxnino/tree-sitter-zig",
    "ts-jest": "^29.1.2",
    "typescript": "^5.3.3"
  },
  "dependencies": {
    "web-tree-sitter": "^0.22.5"
  },
  "prettier": {
    "semi": false,
    "printWidth": 100
  },
  "eslintConfig": {
    "root": true,
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
      "ecmaVersion": 6,
      "sourceType": "module"
    },
    "plugins": [
      "@typescript-eslint"
    ],
    "rules": {
      "max-len": "off",
      "@typescript-eslint/naming-convention": [
        "warn",
        {
          "selector": "import",
          "format": [
            "camelCase",
            "PascalCase"
          ]
        }
      ],
      "@typescript-eslint/semi": "off",
      "curly": "warn",
      "eqeqeq": "warn",
      "no-throw-literal": "warn"
    },
    "ignorePatterns": [
      "out",
      "dist",
      "**/*.d.ts"
    ]
  }
}
